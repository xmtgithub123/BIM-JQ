<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>插入电气柜</title>
	<link rel="stylesheet" href="../public/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="../public/stylesheets/flex.css">
	<link rel="stylesheet" href="../public/stylesheets/font-awesome.css">
	<link rel="stylesheet" href="../public/stylesheets/jquery.treegrid.css">
	<link rel="stylesheet" href="../public/stylesheets/style.css">
	<script src="../public/javascripts/jquery-1.11.1.min.js"></script> <!--引入vue.js-->
</head>
<body>
	<div class="body-wrap p-5">
	    <div class="box-wrap">
      		<div class="bg-box-0" flex="dir:top main:justify">
				<div class="bg-box-b">
					<table class="table table-bordered table-ver-top">
      					<col class="col-xs-6">
					  	<col class="col-xs-6">
					  	<tbody>
							<tr>
								<td>
									<div class="group-item mt-5">
				      					&nbsp;&nbsp;&nbsp;&nbsp;朝向&nbsp;&nbsp;&nbsp;<select name="" id="" class="form-control input-sm dl" v-cloak style="width:100px;" v-model="orientation">
												<option>上</option>
									 			<option>下</option>
												<option>左</option>
									  			<option>右</option>
											</select>
				      				</div>
								</td>
								<td>
									<div class="group-item">
										&nbsp;&nbsp;&nbsp;&nbsp;间距&nbsp;&nbsp;&nbsp;<input type="text" class="form-control input-sm dl"  :class="{disabled:isDisabled}" style="width:100px;" v-model="interval"> MM
				      				</div>
								</td>
							</tr>
							<tr>
								<td>
									<div class="panel panel-info panel-bim">
		  								<div class="panel-heading">第一排</div>
		  								<div class="panel-body-wrap p-5">
		  									<table class="table table-bordered text-center ">
						      					<col class="col-xs-4">
											  	<col class="col-xs-3">
											  	<col class="col-xs-2">
											  	<col class="col-xs-3">
											  <thead>
											  	<tr>
												 	<td>柜子</td>
												    <td>族类型</td>
												    <td>个数</td>
												    <td>操作</td>
											  </tr>
											  </thead>
										  	<tbody>
												<tr v-for="(index, list) in firstRow" :id="key" v-cloak>
													<td>
														<select name="" id=""  class="form-control input-sm " @change="firstRowOptionChanged($event,index)" v-cloak>
															<template v-for="option in optionList" >
																<option  v-if="list.Name == option.value" value="{{list.Name}}"  selected>{{list.Name}}</option>
																<option  v-else >{{option.value}}</option>
															</template>
												        </select>
													</td>
													<td>
														<select name="" id=""  class="form-control input-sm " @change="firstRowItemChanged($event,index)" v-cloak>
															<template  v-for="item in getItems(list.Name)"  >
																<option value="{{list.Symbol}}" v-if="list.Symbol == item.symbolName" selected>{{list.Symbol}}</option>
																<option v-else >{{item.symbolName}}</option>
															</template>
												        </select>
													</td>
													<td><input class="input-noborder" style="height:25px;text-align: center;width:50px;" v-model="list.Count"></input></td>
													<td><button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#NewAddTypeModel">新增类型</button></td>
												</tr>
												<tr @change="tr_changeEvent">
													<td>
														<select name="" id=""  class="form-control input-sm " v-model="selected_type" v-cloak>
															<option v-for="option in optionList" >{{option.value}}</option>
												        </select>
													</td>
													<td>
														<!-- <input class="input-noborder" style="height:25px;text-align: center;width:100px;" v-model="input_type"> -->
														<select name="" id=""  class="form-control input-sm " v-model="selected_ztype" v-cloak>
															<option v-for="item in zItems" >{{item.symbolName}}</option>
												        </select>
													</td>
													<td><input class="input-noborder" style="height:25px;text-align: center;width:50px;" v-model="input_numb"></td>
													<td><button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#NewAddTypeModel">新增类型</button></td>
												</tr>
										  </tbody>
										</table>
		  								</div>
				      				</div>
								</td>
								<td>
									<div class="panel panel-info panel-bim">
		  								<div class="panel-heading">第二排</div>
											<div class="panel-body-wrap p-5">
												<table class="table table-bordered text-center ">
							      					<col class="col-xs-4">
												  	<col class="col-xs-3">
												  	<col class="col-xs-2">
												  	<col class="col-xs-3">
													<thead>
													  	<tr>
														 	<td>柜子</td>
														    <td>族类型</td>
														    <td>个数</td>
														    <td>操作</td>
													  </tr>
													</thead>
											  	    <tbody>
											  	    	<tr v-for="(index, list) in secondRow" :id="key" v-cloak>
															<td>
																<select name="" id=""  class="form-control input-sm " @change="secondRowOptionChanged($event,index)" v-cloak>
																	<template v-for="option in optionList" >
																		<option  v-if="list.Name == option.value" value="{{list.Name}}"  selected>{{list.Name}}</option>
																		<option  v-else >{{option.value}}</option>
																	</template>
																</select>
															</td>
															<td>
																<select name="" id=""  class="form-control input-sm " @change="secondRowItemChanged($event,index)" v-cloak>
																	<template  v-for="item in getItems(list.Name)"  >
																		<option value="{{list.Symbol}}" v-if="list.Symbol == item.symbolName" selected>{{list.Symbol}}</option>
																		<option v-else >{{item.symbolName}}</option>
																	</template>
																</select>
															</td>
															<td><input class="input-noborder" style="height:25px;text-align: center;width:50px;" v-model="list.Count"></input></td>
															<td><button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#NewAddTypeModel">新增类型</button></td>
														</tr>
														<tr @change="tr_changeEvent_t">
															<td>
																<select name="" id=""  class="form-control input-sm" :class="{disabled:isDisabled}" v-cloak v-model="selected_second">
																	<option v-for="option in optionListSecond" >{{option.value}}</option>
														        </select>
															</td>
															<td>
																<select name="" id=""  class="form-control input-sm " v-model="selected_ztype_t" v-cloak>
																	<option v-for="item in zItems_t" >{{item.symbolName}}</option>
														        </select>
															</td>
															<td><input class="input-noborder" style="height:25px;text-align: center;width:50px;" v-model="input_numb_t" :class="{disabled:isDisabled}"></td>
															<td><button class="btn btn-primary btn-sm" data-toggle="modal" data-target="#NewAddTypeModel">新增类型</button></td>
														</tr>

											  		</tbody>
												</table>
											</div>
										</div>
									</div>
								</td>
							</tr>
						</tbody>
					</table>


				</div>
      			<div class="form-box-group">
	      				<div>
							插入偏移X：<input type="text" class="form-control input-sm dl" style="width:140px;margin-right:15px;" v-model="offsetX">Y：<input type="text" class="form-control input-sm dl" style="width:140px;" v-model="offsetY">
	      				</div>
						<button class="btn btn-primary" @click="place">确定</button>
	      			</div>
      		</div>
	    </div>
	</div>
	<!-- Modal -->
	<div class="modal fade" id="NewAddTypeModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	        <h4 class="modal-title" id="myModalLabel">新增类型</h4>
	      </div>
	      <div class="modal-body">
	        	<div flex="box:mean">
				<div class="flex">
					<div class="item_select_2" id="select_zu">
						<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;族</span>
						<select name="" id=""  v-model="selected" class="form-control input-sm" :class="{danger:isDanger}" v-cloak>
							<option v-for="option in options">
								{{option.value}}
							</option>

						</select>
					</div>
					<div class="item_select_2" id="select_type_zu">
						<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;族类型</span>
						<select name="" id="" multiple class="item_select_h form-control" v-model="selected_type" v-cloak>
							<option v-for="(index , item) in items" :id='item.Id' @click="clickItems(item)">
								{{item.symbolName}}
							</option>


						</select>
						<!-- <p>选择：{{selected_type}}</p> -->
					</div>
				</div>
				<div class="flex">
					<div class="add_new_type_box" style = "margin-top:15px;">
						<p>新增族类型</p>
						<div class="form-group">
							<span>名字&nbsp;&nbsp;</span>
							<input type="text" v-model="input_add_name" class="form-control input-sm">
						</div>
						<div class="form-group">
							<span>宽度&nbsp;&nbsp;</span>
							<input type="text" v-model="input_add_width"  class="form-control input-sm">
						</div>
						<div class="form-group">
							<span>长度&nbsp;&nbsp;</span>
							<input type="text" v-model="input_add_height"  class="form-control input-sm">
						</div>
						<div class="clearfix">
							<button class="btn btn-primary btn-sm m-0 btn-bim btn-xs pull-right" @click="submitData(this,'增加')" v-cloak>增加</button>
							<button class="btn btn-primary btn-sm m-0 btn-bim btn-xs pull-right" v-show="selected_type.length > 0" @click="submitData(this,'修改')" v-cloak>修改</button>
						</div>
					</div>

				</div>
			</div>
	      </div>
	      <div class="modal-footer">	        
	      </div>
	    </div>
	  </div>
	</div>

	<div class="body-full-mask" v-if="isShowMask" v-cloak>
		
		<div class="app-loading">
	  		<div class="box">
	  			<div class="line-spin-fade-loader">
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  			</div>
	  			<p>{{showMaskInfo}}</p>

	  		</div>
  		</div>
	</div>

	<script src="../public/javascripts/bootstrap.min.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/vue.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/vue-resource.min.js"></script><!--引入vue.js 插件库 vue中的ajax-->
	<script type="text/javascript">

	</script>

	<script type="text/javascript">
		vue = new Vue({
			el:'body',
			data:{
				isToNext:true,
				optionList:[ //第一排
					// {
					// 	value:'出线柜',
					// 	symbols:[{
					// 		symbolName:'100*100',
					//		symbolId：''
					// 	}]
					// },
				],
				optionListSecond:[ //第二排
					// {
					// 	value:'出线柜',
					// 	symbols:[{
					// 		name:'100*100',
					// 		symbolId：''
					// 	}]
					// },
				],
				selected_type:'',//第一排柜子选择框
				selected_ztype:'',//第一排族类型selected框
				selected_second:'',//第二排柜子选择框
				input_type:'', //族类型
				input_numb:1, //个数

				selected_ztype_t:'',//第一排族类型
				input_numb_t:1,//第二排族类型
				firstRow:[
					// {
				    //  gz:'',
					// 	ztype:'',
					// 	numb:;''
					// }
				], //第一排tr数组循环
				secondRow:[],
				offsetX:'0', //偏移X
				offsetY:'0',//偏移Y
				checkboxed:'',
				// isDisabled:true, //是否禁用状态
				orientation:'上', //朝向
				interval:'2000', //间隔
				//decoratePoint:'左上',//布置点
				objs:[],
				options:[],
				lists:[],
				selected:'',//设置族
				selected_g:'',//设置族类型
				input_add_name:'',//新增类型 名字
				input_add_width:'',//新增类型 长度
				input_add_height:'',//新增类型 宽度
				status:false,
				path:'',
				isShowMask:true,//是否显示全屏遮罩
				showMaskInfo:'正在获取族类型信息'
			},

			created(){
				this.path = '电气一次\\电气柜\\';
				var that = this;
				if (window.JQ)
				{
					var sendJson = {
						EventName:'JQFamily',
						Path:that.path,
						Operation:'getFamilyFileInfos',
						Parameters:{宽度:'',长度:''},
						Callback:'vue.loadSymbols'
						}
					this.showMaskInfo = '正在获取族类型信息';
					this.isShowMask = true;
					JQ.raiseEvent(JSON.stringify(sendJson));
				}
			},

			methods:{
				loadSymbols(info) {
					console.log(info)
					this.optionList.length = 0
					this.optionListSecond.length = 0
					var that = this;
					var infos = info;
					//var infos = JSON.parse(info);
					infos.forEach(function(e) {
						var optionListItem = {};
						optionListItem.value = e.name;
						optionListItem.symbols = e.symbols;
						that.optionList.push(optionListItem);
						that.optionListSecond.push(optionListItem);
						that.options.push({value:e.name,items:e.symbols});

					})
					this.isShowMask = false;
					//this.lists = JSON.parse(info)
				},

				clickItems(obj) {
					this.status = true;
					console.log(obj)
					var that = this;
					that.input_add_name = obj.symbolName;
					that.input_add_width = obj.parameters.宽度;
					that.input_add_height = obj.parameters.长度;
				},

				submitData(obj,status) {
					var that = this;
					console.log(obj)
					if(status == '修改') {				
						if (window.JQ)
						{
							var sendJson = {
								EventName:'JQFamily',
								Path:that.path,
								Operation:'modifyFamilySymbol',
								FamilyName:that.selected,
								SymbolName:that.selected_type[0],
								SymbolNewName:that.input_add_name,
								Parameters:{宽度:that.input_add_width,长度:that.input_add_height},
								Callback:'vue.reloadData'
								}
							this.showMaskInfo = '正在更新族类型';
							that.isShowMask = true;
							JQ.raiseEvent(JSON.stringify(sendJson));
						}
							
						that.status = false;

					}
					else if (status == '增加'){						
						if (window.JQ)
						{
							var sendJson = {
								EventName:'JQFamily',
								Path:that.path,
								Operation:'addFamilySymbol',
								FamilyName:that.selected,
								SymbolName:that.input_add_name,
								Parameters:{宽度:that.input_add_width,长度:that.input_add_height},
								Callback:'vue.reloadData'
								}
							this.showMaskInfo = '正在更新族类型';
							that.isShowMask = true;
							JQ.raiseEvent(JSON.stringify(sendJson));
						}
					}
				},

				reloadData()
				{
					var that = this;
					if (window.JQ)
					{
						var sendJson = {
							EventName:'JQFamily',
							Path:that.path,
							Operation:'getFamilyFileInfos',
							Parameters:{宽度:'',长度:''},
							Callback:'vue.loadSymbols'
							}
						JQ.raiseEvent(JSON.stringify(sendJson));
						that.isShowMask = false;
					}
				},

				submit(){

				},

				//第一排表格一行编辑都完成后，自动添加下一行
				tr_changeEvent(){
					var that = this;
					if(this.selected_type && this.selected_ztype && this.input_numb != '') {
						that.firstRow.push({Name:this.selected_type, Symbol:this.selected_ztype, Count:this.input_numb})
						that.selected_ztype = '';
						that.input_numb=1;
						that.selected_type=''
					}
				},

				//第二排表格一行编辑都完成后，自动添加下一行
				tr_changeEvent_t(){
					var that = this;
					if(this.selected_second && this.selected_ztype_t && this.input_numb_t != '') {
						that.secondRow.push({Name:this.selected_second, Symbol:this.selected_ztype_t, Count:this.input_numb_t})
						that.selected_ztype_t = '';
						that.input_numb_t=1;
						that.selected_second='';
					}
				},

				//点击确定事件
				place() {
					var that = this
					var info = {
						EventName: "PlaceCabinet",
						Dist: that.interval,
						Direction: that.orientation,
						OffsetX: that.offsetX,
						OffsetY: that.offsetY,
						Path:that.path,
						FirstRow: that.firstRow,
						SecondRow: that.secondRow
					}
					console.log(JSON.stringify(info))
					//JQ.clickOK(JSON.stringify(info));
					//JQ.raiseEvent(JSON.stringify(info));
					if (window.JQ) {
						JQ.raiseEvent(JSON.stringify(info));
						//JQ.raiseEvent('{"EventName":"PlaceCabinet" , "Dist":0 , "Direction":"下" , "OffsetX":10 , "OffsetY":10 , "FirstRow":[{"Name":"出线柜" , "Count":3} , {"Name":"主变进线柜" , "Count":2} , {"Name":"出线柜" , "Count":2}] , "SecondRow":[{"Name":"出线柜" , "Count":3} , {"Name":"主变进线柜" , "Count":2} , {"Name":"出线柜" , "Count":2}] , "Dist":1000}');
					}
				},

				firstRowOptionChanged(event , index)
				{
					selectNode = event.target;
					this.firstRow[index].Name = selectNode.options[selectNode.selectedIndex].text;
				},

				firstRowItemChanged(event , index)
				{
					selectNode = event.target;
					this.firstRow[index].Symbol = selectNode.options[selectNode.selectedIndex].text;
				},
				secondRowOptionChanged(event , index)
				{
					selectNode = event.target;
					this.secondRow[index].Name = selectNode.options[selectNode.selectedIndex].text;
				},

				secondRowItemChanged(event , index)
				{
					selectNode = event.target;
					this.secondRow[index].Symbol = selectNode.options[selectNode.selectedIndex].text;
				},
				getItems(selectedOptionName)
				{
					var items = [];
					
					this.options.forEach(function(e){
						if (e.value == selectedOptionName)
						items = e.items;
					});
					console.log(items);
					return items;
				}
			},

			computed:{
				//第一排选择柜子与族类型
				zItems() {
					var zItems = [] ,selectedValue = this.$data.selected_type;
					this.$data.optionList.forEach(function(e){
						if(e.value == selectedValue) {
							zItems = e.symbols;
						}
					});
					return zItems;
				},
				//第二排选择柜子与族类型
				zItems_t() {
					var zItems_t = [] ,selectedValue = this.$data.selected_second;
					this.$data.optionListSecond.forEach(function(e){
						if(e.value == selectedValue) {
							zItems_t = e.symbols;
						}
					});
					return zItems_t;
				},
				items() {
					var items = [] ,selectedValue = this.$data.selected;
					this.$data.options.forEach(function(e){
						if(e.value == selectedValue) {
							items = e.items;
						}
					});
					return items;
				}
				
			},
			watch:{
				// checkboxed:{
				// 	//监听双排复选框，默认第二排不可编辑，选中则显示可编辑状态
				// 	handler:function(val,oldVal){
				// 		if(val) {
				// 			this.isDisabled = false
				// 		}
				// 		else {
				// 			this.isDisabled = true
				// 		}
				// 	},
				// 	deep:true
				// }
			}
		})
	</script>
</body>
</html>