<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>布置支吊架</title>
	<link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="/stylesheets/flex.css">
	<link rel="stylesheet" href="/stylesheets/font-awesome.css">
	<link rel="stylesheet" href="/stylesheets/jquery.treegrid.css">
	<link rel="stylesheet" href="/stylesheets/style.css">
	<script src="/javascripts/jquery-1.11.1.min.js"></script> <!--引入vue.js-->
</head>
<body>
	<div class="body-wrap">
	    <div class="panel-body box-wrap">
      		<div class="bg-box-0">
				<div class="bg-box-b">
					<div class="form-horizontal">
					  <div class="form-group">
					    <label class="col-sm-2 control-label">支吊架：</label>
					    <div class="col-sm-10 pl-0">
					      <select name="" id="" class="form-control input-sm dl" v-cloak style="width:100px;margin-right:15px;" v-model="type">
								<option>支架</option>
					 			<option>吊架</option>
							</select>
							<label>预埋件：</label>
							<select name="" id="" class="form-control input-sm dl" v-cloak style="width:100px;" v-model="embeddedPartFamily">
								<option v-for="option in embeddedPartOptions">
									{{option.value}}
								</option>
								<!--<option>预埋件1</option>
					 			<option>预埋件2</option>-->
							</select>
							<select name="" id="" class="form-control input-sm dl" v-cloak style="width:100px;" v-model="embeddedPartSymbol">
								<option v-for="option in embeddedPartGetSymbolOptions">
									{{option.symbolName}}
								</option>
								<!--<option>预埋件1</option>
					 			<option>预埋件2</option>-->
							</select>
							<button class="btn btn-primary btn-sm" @click="modifySymbol(1)" >新增类型</button>
					    </div>
					  </div>
					</div>

      				<div class="group-item mt-15">
      					<div class="panel panel-info penel-fix">
							<div class="panel-heading">立柱</div>
							<div class="panel-body-wrap ptb-5">
								<div class="form-horizontal">
								  <div class="form-group">
								    <label class="col-sm-2 control-label">高度：</label>
								    <div class="col-sm-10 pl-0">
								      <input type="text" class="form-control input-sm dl" style="width:100px" v-model="standColumnHeight"> mm
								      <label>类型：</label><select name="" id=""  class="form-control input-sm dl" v-cloak style="width:100px" v-model="standColumnFamily">
											<option v-for="option in standColumnOptions">
												{{option.value}}
											</option>
									        </select>
									        <select name="" id=""  class="form-control input-sm dl" v-cloak style="width:100px" v-model="standColumnSymbol">
												<option v-for="option in standColumnGetSymbolOptions">
													{{option.symbolName}}
												</option>
									        </select>
											<button class="btn btn-primary btn-sm" @click="modifySymbol(2)">新增类型</button>
								    </div>
								  </div>
								</div>
							</div>
						</div>
      				</div>
      				<div class="group-item mt-15">
      					<div class="panel panel-info penel-fix">
							<div class="panel-heading">横担</div>
							<div class="panel-body-wrap ptb-5">

								<div class="row">
									<div class="col-sm-7">
										<div class="form-horizontal">
										  	<div class="form-group">
											    <label class="col-sm-3 control-label pr-0">长度：</label>
											    <div class="col-sm-9">
											      <input type="text" class="form-control input-sm dl" style="width:100px" v-model="horPartLen"> mm
											    </div>
										  	</div>
										  	<div class="form-group">
											    <label class="col-sm-3 control-label pr-0">距底偏移：</label>
											    <div class="col-sm-9">
											      	<input type="text" class="form-control input-sm dl" style="width:100px;" v-model="horPartZOffset"> mm
											    </div>
										  	</div>
										  	<div class="form-group">
											    <label class="col-sm-3 control-label pr-0">横担间隔：</label>
											    <div class="col-sm-9">
											      	<input type="text" class="form-control input-sm dl" style="width:100px" v-model="horPartDist"> mm
											      	<label class="ml-15">数量：</label><input type="text" class="form-control input-sm dl "style="width:80px;" v-model="horPartCount">
											    </div>
										  	</div>
										  	<div class="form-group">
											    <label class="col-sm-3 control-label pr-0">位置：</label>
											    <div class="col-sm-9">
											      	<select name="" id=""  class="form-control input-sm dl" v-cloak style="width:100px;margin-right:15px;" v-model="horPartPlaceType">
														<option>居中</option>
												  		<option>居左</option>
														<option>居右</option>
												      </select>&nbsp;&nbsp;&nbsp;&nbsp;
												      <label class="ml-15">偏移：</label><input type="text" class="form-control input-sm dl" style="width:80px;" v-model="horPartOffset"> mm
											    </div>
										  	</div>
										  	<div class="form-group">
											    <label class="col-sm-3 control-label pr-0">类型：</label>
											    <div class="col-sm-9">
											      	<select name="" id=""  class="form-control input-sm dl" v-cloak style="width:100px;margin-right:15px;" v-model="crossArmFamily">

															<option v-for="option in crossArmOptions">
																{{option.value}}
															</option>
												        </select>
												       <select name="" id=""  class="form-control input-sm dl" v-cloak style="width:100px; margin-right:15px;" v-model="crossArmSymbol">
															<option v-for="option in crossArmGetSymbolOptions">
																{{option.symbolName}}
															</option>
												        </select>
												        <button class="btn btn-primary btn-sm" @click="modifySymbol(3)">新增类型</button>
											    </div>
										  	</div>
										</div>
									</div>
									<div class="col-sm-5">
										<div class="img-box-flex">
					  	    				<img src="{{type}}.png" alt="" class="img-responsive">
					  	    			</div>
									</div>
								</div>

							</div>
						</div>
      				</div>
      				<div class="group-item mt-15">
      					<div class="panel panel-info penel-fix">
							<div class="panel-heading">支吊架排布</div>
							<div class="panel-body-wrap p-5">
								<div class="row">
									<div class="col-sm-6 col-md-6">
										<table class="table table-bordered table-flex text-center">
											<thead>
											  	<tr>
												 	<td>间隔</td>
												    <td>个数</td>
												    <td>角度</td>
												    <td>操作</td>
											  </tr>
											</thead>
									  	    <tbody>
												<tr v-for="list in trList" v-cloak>
													<td>
														<input type="text" class="input-noborder text-center" style="width:80px;" v-model="list.Dist">
													</td>
													<td>
														<input type="text" class="input-noborder text-center" style="width:80px;" v-model="list.Count">

													</td>
													<td>
														<input type="text" class="input-noborder text-center" style="width:80px;" v-model="list.Angle" >

													</td>
													<td>
														<button class="btn btn-primary btn-xs" @click="removeTrlist(this)"><i class="glyphicon glyphicon-trash"></i></button>
													</td>
												</tr>
												<tr>
													<td >
														<input type="text" class="input-noborder text-center" style="width:80px;" v-model="input_interval" @change="changeTR">
													</td>
													<td>
														<input type="text" class="input-noborder text-center"  style="width:80px;" v-model="input_number">
													</td>
													<td>
														<input type="text" class="input-noborder text-center"  style="width:80px;" v-model="input_angle">
													</td>
													<td>

													</td>
												</tr>
									  		</tbody>
										</table>
									</div>
									<div class="col-sm-6 col-md-6">
										<div class="img-box-flex">
							  	    		<img src="支吊架排布.png" alt="" class="img-responsive">
							  	    	</div>
									</div>
								</div>
							</div>
						</div>
      				</div>

      				<div class="bg-footer ">
						<button class="btn btn-primary btn-bim btn-sm mb-0 pull-right" @click="place">布置</button>
					</div>
				</div>
      		</div>
	    </div>
	</div>
	<!-- Modal -->
	<div class="modal fade" id="NewAddTypeModel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	        <h4 class="modal-title" id="myModalLabel">新增类型</h4>
	      </div>
	      <div class="modal-body">
	        	<div flex="box:mean">
				<div class="flex">
					<div class="item_select_2" id="select_zu">
						<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;族</span>
						<select name="" id=""  v-model="selected" class="form-control input-sm" :class="{danger:isDanger}" v-cloak>
							<option v-for="option in options">
								{{option.value}}
							</option>

						</select>
					</div>
					<div class="item_select_2" id="select_type_zu">
						<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;族类型</span>
						<select name="" id="" multiple class="item_select_h form-control" v-model="selected_type" v-cloak>
							<option v-for="(index , item) in items" :id='item.Id' @click="clickItems(item)">
								{{item.symbolName}}
							</option>
						</select>
						<!-- <p>选择：{{selected_type}}</p> -->
					</div>
				</div>
				<div class="flex">
					<div class="add_new_type_box">
						<p>新增族类型</p>
						<div class="table-height" style="max-height:176px;">
							<table class="table-bordered text-center mt-15">
								  <tr v-for="(index,list) in parameterList">
								    <td style="width:100px;">{{list.name}}</td>
								    
								    <td>
								    	<input class="input-noborder" style="height:25px;text-align: center;width:50px;" v-model="list.input_value" />
								    </td>
								  </tr>
						  
							</table>
							<button class="btn btn-info" @click="test">test</button>
						</div>
						<div class="clearfix">
							<button class="btn btn-primary btn-sm m-0 btn-bim btn-xs pull-right" @click="submitData(this,'增加')" v-cloak>增加</button>
							<button class="btn btn-primary btn-sm m-0 btn-bim btn-xs pull-right" v-show="selected_type.length > 0" @click="submitData(this,'修改')" v-cloak>修改</button>
						</div>
					</div>

				</div>
			</div>
	      </div>
	      <div class="modal-footer">
	      </div>
	    </div>
	  </div>
	</div>

	<div class="body-full-mask" v-if="isShowMask" v-cloak>
		<div class="app-loading">
	  		<div class="box">
	  			<div class="line-spin-fade-loader">
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  				<div></div>
	  			</div>
	  			<p>{{showMaskInfo}}</p>

	  		</div>
  		</div>
	</div>

	<script src="/javascripts/bootstrap.min.js"></script> <!--引入vue.js-->
	<script src="/javascripts/vue.js"></script> <!--引入vue.js-->
	<script src="/javascripts/vue-resource.min.js"></script><!--引入vue.js 插件库 vue中的ajax-->
	<script type="text/javascript">
	</script>

	<script type="text/javascript">
		vue = new Vue({
			el:'body',
			data:{
				isToNext:true,
				trList:[
					// {
					// 	interval:'',
					// 	number:'',
					// 	angle:''
					// }
				],
				input_interval:'', //支吊架排布间隔
				input_number:'', //支吊架排布个数
				input_angle:'', //支吊架排布角度
				type:'支架',//支吊架
				embeddedPartFamily:'',//预埋件族
				embeddedPartSymbol:'', //预埋件族类型
				embeddedPartOptions:[],	//预埋件所有族
				standColumnHeight:'1000',//立柱高度
				standColumnFamily:'',//立柱族
				standColumnSymbol:'',//立柱类型
				standColumnOptions:[],	//立柱所有族
				horPartZOffset:'300',//横担立柱底偏移
				horPartLen:'500',//横担长度
				horPartDist:'300',//横担间隔
				horPartPlaceType:'居中', //横但位置
                horPartOffset:'0',//横担位置偏移
				horPartCount: '2', //横担数量
				crossArmFamily:'',//横担族
				crossArmSymbol:'',//横担类型
				crossArmOptions:[],	//横担所有族
				objs:[],
				options:[],
				lists:[],
				selected:'',//设置族
				selected_type:'',//设置族类型
				input_add_name:'',//新增类型 名字
				input_add_width:'',//新增类型 长度
				input_add_height:'',//新增类型 宽度
				status:false,
				modelDialogType:1,
				embeddedPartPath:'电气一次\\电缆支吊架\\预埋件\\',
				standColumnPath:'电气一次\\电缆支吊架\\立柱\\',
				crossArmPath:'电气一次\\电缆支吊架\\横担\\',
				// parameterList:['r1','r','k','长度','bf','d','t','x','y'],
				isShowMask:false,//是否显示全屏遮罩
				parameterList:[
					{name:'r1',input_value:''},
					{name:'r',input_value:''},
					{name:'k',input_value:''},
					{name:'长度',input_value:''},
					{name:'bf',input_value:''},
					{name:'d',input_value:''},
					{name:'t',input_value:''},
					{name:'x',input_value:''},
					{name:'y',input_value:''}],
				showMaskInfo:'正在获取族类型信息'
			},
			created(){
				var that = this;
				if (window.JQ)
				{
					var sendJson = {
						EventName:'JQFamily',
						Path:that.embeddedPartPath,
						Operation:'getFamilyFileInfos',
						Parameters:{},
						Callback:'vue.loadEmbeddedPart'
						}
					this.showMaskInfo ='正在获取族类型信息';
					this.isShowMask = true;
					JQ.raiseEvent(JSON.stringify(sendJson));
				}
				
				
				// if (window.JQ) {
				// 	var path = '电气一次\\预埋件\\'
				// } else {
				// 	var that = this;
				// 	that.$http.get('/javascripts/type.json').then(function(res){
				// 		console.log(res)
				// 		var data = res.data;
				// 		for (var i =0 ;i < data.length; i++) {
				// 			var symbolData = data[i].Symbol;
				// 			var list= [];
				// 			for (var j = 0 ;j <symbolData.length; j++) {
				// 				list.push(data[i].Symbol[j])
				// 			}
				// 			that.options.push({value:data[i].Name,items:list})
				// 		}
				// 	})
				// 	.catch(function(error) {
				// 		console.log(error)
				// 	})
				// 	console.log(that.options)
				// }
			},
			methods:{
				loadEmbeddedPart(info)
				{
					this.embeddedPartOptions.length = 0
					var that = this;
					var infos = info;
					infos.forEach(function(e) {
						that.embeddedPartOptions.push({value:e.name,items:e.symbols});
					})

					var parameterJson = {};
					this.parameterList.forEach(function(listItem)
					{
						parameterJson[listItem] = '';
					});
					if (window.JQ)
					{
						var sendJson = {
							EventName:'JQFamily',
							Path:that.standColumnPath,
							Operation:'getFamilyFileInfos',
							Parameters:parameterJson,
							Callback:'vue.loadStandColumn'
							}
						JQ.raiseEvent(JSON.stringify(sendJson));
					}
				},

				loadStandColumn(info)
				{
					this.standColumnOptions.length = 0
					var that = this;
					var infos = info;
					infos.forEach(function(e) {
						that.standColumnOptions.push({value:e.name,items:e.symbols});
					})

					var parameterJson = {};
					this.parameterList.forEach(function(listItem)
					{
						parameterJson[listItem] = '';
					});
					
					if (window.JQ)
					{
						var sendJson = {
							EventName:'JQFamily',
							Path:that.crossArmPath,
							Operation:'getFamilyFileInfos',
							Parameters:{},
							Callback:'vue.loadCrossArm'
							}
						JQ.raiseEvent(JSON.stringify(sendJson));
					}
				},
				loadCrossArm(info)
				{
					this.crossArmOptions.length = 0
					var that = this;
					var infos = info;
					infos.forEach(function(e) {
						that.crossArmOptions.push({value:e.name,items:e.symbols});
					})
					this.isShowMask = false;

				},

				clickItems(obj) {
					this.status = true;
					console.log(obj)
					var that = this;
					that.input_add_name = obj.symbolName;
					switch (this.modelDialogType)
					{
						case 1:
							//that.input_add_width = obj.parameters.宽度;
							//that.input_add_height = obj.parameters.长度;
							break;
						case 2:
							break;
						case 3:
							break;
						default:
							return;
					}
					
				},

				submitData(obj,status) {
					var that = this;
					var path = '';
					var parameter = {};
					switch (this.modelDialogType)
					{
						case 1: 
							path = this.embeddedPartPath;
							parameter = {};
							break;
						case 2:
							path = this.standColumnPath;
							parameter = {};
							break;
						case 3:
							path = this.crossArmPath;
							parameter = {};
							break;
						default:
							return;
					}

					if(status == '修改') {				
						if (window.JQ)
						{
							var sendJson = {
								EventName:'JQFamily',
								Path:that.path,
								Operation:'modifyFamilySymbol',
								FamilyName:that.selected,
								SymbolName:that.selected_type[0],
								SymbolNewName:that.input_add_name,
								Parameters:parameter,
								Callback:'vue.reloadData'
								}
							that.showMaskInfo ='正在更新族类型';
							that.isShowMask = true;
							JQ.raiseEvent(JSON.stringify(sendJson));
							
						}
							
						that.status = false;

					}
					else if (status == '增加'){						
						if (window.JQ)
						{
							var sendJson = {
								EventName:'JQFamily',
								Path:that.path,
								Operation:'addFamilySymbol',
								FamilyName:that.selected,
								SymbolName:that.input_add_name,
								Parameters:{宽度:that.input_add_width,长度:that.input_add_height},
								Callback:'vue.reloadData'
								}
							that.showMaskInfo ='正在更新族类型';
							that.isShowMask = true;
							JQ.raiseEvent(JSON.stringify(sendJson));
							
						}
					}
				},

				reloadData()
				{
					var that = this;
					if (window.JQ)
					{
						var sendJson = {
							EventName:'JQFamily',
							Path:that.embeddedPartPath,
							Operation:'getFamilyFileInfos',
							Parameters:{宽度:'',长度:''},
							Callback:'vue.loadEmbeddedPart'
							}
						JQ.raiseEvent(JSON.stringify(sendJson));
					}
					this.isShowMask = false;
				},

				submit(){
				},
				changeTR(){
					var that = this;
					if ( (/^[0-9]+.?[0-9]*$/.test(that.input_interval) == false)) {
						//alert('请输入数字')
						this.input_number = '1'
						this.input_angle = '0'
					} else {
						that.trList.push({Dist:that.input_interval, Count:1, Angle:0})
						that.input_interval = ''
						that.input_number = '',
						that.input_angle = ''
					}
					console.log(this.trList)
				},
				removeTrlist(e) {
					console.log(e)
					var index = e.$index;
					this.trList.splice(index,1)
				},
				//
				place() {
					var that = this;
					var info = {
						EventName: 'PlaceSupport',
						Type: that.type,
						BasePart: '矩形钢',
						BasePartSymbolId: 0,
						//立柱部分
						VerPart: '热轧槽钢柱',
						VerPartSymbolId:0,
						VerPartHeight:that.standColumnHeight,
						//横担部分
						HorPart: '角钢',
						HorPartSymbolId: 0,
						HorPartLen: that.horPartLen,
						HorPartDist: that.horPartDist,
						HorPartCount: that.horPartCount,
						HorPlaceType: that.horPartPlaceType,
						HorOffset: that.horPartOffset,
						HorBaseOffset: that.horPartZOffset,
						//支架排布
						Arrangement: that.trList
					}
					JQ.raiseEvent(JSON.stringify(info))
				},

				modifySymbol(type)
				{
					$("#NewAddTypeModel").modal("show");
					this.modelDialogType = type;
					switch (type)
					{
						case 1:
							this.options = this.embeddedPartOptions;
							break;
						case 2:
							this.options = this.standColumnOptions;
							break;
						case 3:
							this.options = this.crossArmOptions;
							break;
						default:
							this.options = [];
							break;
					}
				},
			},
			computed:{
				embeddedPartGetSymbolOptions() 
				{
					var items = [] ,selectedValue = this.embeddedPartFamily;
					this.embeddedPartOptions.forEach(function(e){
						if(e.value == selectedValue) {
							items = e.items;
						}
					});
					return items;
				},
				standColumnGetSymbolOptions()
				{
					var items = [] ,selectedValue = this.standColumnFamily;
					this.standColumnOptions.forEach(function(e){
						if(e.value == selectedValue) {
							items = e.items;
						}
					});
					return items;
				},
				crossArmGetSymbolOptions()
				{
					var items = [] ,selectedValue = this.crossArmFamily;
					this.crossArmOptions.forEach(function(e){
						if(e.value == selectedValue) {
							items = e.items;
						}
					});
					return items;
				},

				items() {
					var items = [] ,selectedValue = this.selected;
					this.options.forEach(function(e){
						if(e.value == selectedValue) {
							items = e.items;
						}
					});
					return items;
				}
			},
			watch:{
				trList:{
					handler:function(val,oldVal) {
						// console.log(val)
						this.trList = val
					}
				}
			}
		})
	</script>
</body>
</html>