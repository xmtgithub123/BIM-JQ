<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>电气设备</title>
	<link rel="stylesheet" href="../public/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="../public/stylesheets/flex.css">
	<link rel="stylesheet" href="../public/stylesheets/font-awesome.css">
	<link rel="stylesheet" href="../public/stylesheets/jquery.treegrid.css">
	<link rel="stylesheet" href="../public/stylesheets/style.css">
</head>
<body>
	<div class="body-wrap">
	    <div class="panel-body box-wrap">
      		<div class="bg-box">
				 <div class="row">
				 	<div class="col-sm-4">
				 		<div id="tree"></div>
				 	</div>
				 	<div class="col-sm-8">
				 		<div class="row">
				 			<div class="col-sm-4 mt-15 row-list pt-15" v-for="(index,list) in lists" :key="index" :class="{active: chooseList == list}" @click="clickList(list)">
		 						<img :src=list.img alt="" class="img-responsive text-center" style='width:50px;height:50px'>
		 						<p class="text-center">{{list.name}}</p>
		 					</div>
				 		</div>
				 	</div>
				 </div>
      		</div>
	    </div>
		<div class="bg-footer">
			<button class="btn btn-primary btn-bim btn-sm mb-0" @click="onOK">确定</button>
		</div>
	</div>
	<script src="../public/javascripts/jquery-1.11.1.min.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/bootstrap.min.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/bootstrap-treeview.js"></script>
	<script src="../public/javascripts/vue.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/vue-resource.min.js"></script><!--引入vue.js 插件库 vue中的ajax-->
	
	<script type="text/javascript">
		new Vue({
			el:'body',
			data:{
				type:"",
				tree:[],
				lists:[],
				chooseList:{},
				isActive:false
			},

			created() {
				this.type = this.getQueryString('Type');
				if (this.type == 'transformer') {
					this.tree = [
						{text:"变压器", nodes:[
							{text:"接地变"},
							{text:'站用变'},
							{text:'主变'}
						]}
					]
				} else if (this.type == "gis") {
					this.tree = [
						{text:"GIS"}
					]
				} else if (this.type == "cb") {
					this.tree = [
						{text:"断路器"}
					]
				} else if (this.type == "ct") {
					this.tree = [
						{text:"电流互感器"}
					]
				} else if (this.type == "pt") {
					this.tree = [
						{text:"电压互感器"}
					]
				} else if (this.type == "ds") {
					this.tree = [
						{text:'隔离开关'}
					]
				} else if (this.type == "la") {
					this.tree = [
						{text:'避雷器'}
					]
				} else if (this.type == "capacitor") {
					this.tree = [
						{text:'电容器'}
					]
				} else if (this.type == "sc") {
					this.tree = [
						{text:'开关柜'}
					]
				} else if (this.type == "asc") {
					this.tree = [
						{text:'消弧线圈'}
					]
				} else {
					this.tree = [
						{text:'其他设备', nodes:[
							{text:'穿墙套管'}
						]}
					]
				}
				
    			$('#tree').treeview({
					data:this.tree,
					enabledLinks:true,
					onNodeSelected: this.nodeSelected
				})
			},

			methods:{
				getQueryString(name) {
     				var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
     				var r = window.location.search.substr(1).match(reg);
     				if (r != null) {
				 		return  unescape(r[2]);
					}
					return null;
				},

				//选中节点
				nodeSelected(event, node) {
					var path = '电气一次\\';
					var parent = $('#tree').treeview('getParent', node);
					if (parent != undefined) {
						path += parent.text + '\\'
					}
					path += node.text;
					alert(path)
					JQ.getFamilyFileInfos(path).then(this.loadList)
				},

				loadList(info) {
					console.log(info)
					this.lists = JSON.parse(info)
				},

				clickList(obj) { //选中的某一项
					console.log(obj)
					this.chooseList = obj;
				},

				onOK() {
					var info = {
						EventName: "PlaceEquipment",
						FamilyName:'主变设备',
						FamilyFile:"E:\\work\\ACADTools\\trunk\\Revit\\GRevitTools\\bin\\x64\\Debug\\FamilyLib\\电气一次\\变压器\\110kV\\主变设备.rfa"
						//FamilyFile:"主变设备.rfa"
					}
					if (window.JQ) {
						JQ.raiseEvent(JSON.stringify(info));
					}
				}
			}
		})
	</script>
</body>
</html>