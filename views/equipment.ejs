<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>电气设备</title>
	<link rel="stylesheet" href="../public/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="../public/stylesheets/flex.css">
	<link rel="stylesheet" href="../public/stylesheets/font-awesome.css">
	<link rel="stylesheet" href="../public/stylesheets/jquery.treegrid.css">
	<link rel="stylesheet" href="../public/stylesheets/style.css">
	<style type="text/css">
		.row-list {
			border:2px solid transparent;
			border-radius: 6px;
			transition: all .2s;
		}
		.row-list.active{
			border:2px solid #169bd5;

		}
		.row-list p {
			height:38px;
			overflow:hidden;
			display: -webkit-box;
			-webkit-line-clamp:2;
			-webkit-box-orient:vertical;
			word-break:break-all;

		}
		.max-height {
			min-height: 480px;
			max-height: 480px;
    		overflow-y: auto;
    		border-left:1px solid #dbdbdb;

		}
		.bg-auto-box {
			width:auto;
		}
		.bg-auto-box .col-sm-4 {
			width:200px;
		}
		.bg-auto-box .col-sm-8 {
			width:calc(100% - 200px);
		}
	</style>
</head>
<body>
	<div class="body-wrap">
	    <div class="panel-body box-wrap">
      		<div class="bg-box bg-auto-box">
				 <div class="row">
				 	<div class="col-sm-4">
				 		<div id="tree"></div>
				 	</div>
				 	<div class="col-sm-8 max-height">

				 			<div class="col-sm-4 mt-15 row-list pt-15" v-for="(index,list) in lists" :key="index" :class="{active: chooseList == list}" @click="clickList(list)">
		 						<img :src=list.img alt="" class="img-responsive center" style='height:70px'>
		 						<p class="text-center">{{list.name}}</p>
		 					</div>

				 	</div>
				 </div>
			</div>
	    </div>
		<!--<div class="bg-footer">
			<div class="col-md-12">
			<button class="btn btn-primary btn-bim btn-sm mb-0 pull-right" @click="onOK">布置</button>
			</div>
		</div>-->
		<div class="form-box-group" style="padding-left:20px;padding-right:20px;padding-top:5px;">
			<div>
				插入偏移X：<input type="text" class="form-control input-sm dl" style="width:140px;margin-right:15px;" v-model="offsetX">Y：<input type="text" class="form-control input-sm dl" style="width:140px;" v-model="offsetY">
			</div>
			<button class="btn btn-primary" @click="onOK">确定</button>
		</div>

		<div class="body-full-mask" v-if="isShowMask" v-cloak>
			<div class="app-loading">
				<div class="box">
					<div class="line-spin-fade-loader">
						<div></div>
						<div></div>
						<div></div>
						<div></div>
						<div></div>
						<div></div>
						<div></div>
						<div></div>
					</div>
					<p>{{showMaskInfo}}</p>

				</div>
			</div>
		</div>
		
	</div>
	<script src="../public/javascripts/jquery-1.11.1.min.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/bootstrap.min.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/bootstrap-treeview.js"></script>
	<script src="../public/javascripts/vue.js"></script> <!--引入vue.js-->
	<script src="../public/javascripts/vue-resource.min.js"></script><!--引入vue.js 插件库 vue中的ajax-->

	<script type="text/javascript">
		vue = new Vue({
			el:'body',
			data:{
				path:'',  //专业路径
				type:"",
				tree:[],
				lists:[],
				chooseList:{},
				isActive:false,
				offsetX:'0',
				offsetY:'0',
				isShowMask:false,
				showMaskInfo:'正在获取族类型信息'
			},

			created() {
				this.path = '电气一次\\'
				this.type = this.getQueryString('Type');
				if (this.type == 'Transformer') {
					this.tree = [
						{text:"变压器", nodes:[
							{text:"接地变", state:{selected: true}},
							{text:'站用变'},
							{text:'主变'}
						]}
					]
					//path += '变压器\\接地变'
				} else if (this.type == "GIS") {
					this.tree = [
						{text:"GIS", state:{selected: true}}
					]
					//path += 'GIS'
				} else if (this.type == "CB") {
					this.tree = [
						{text:"断路器", state:{selected: true}}
					]
				} else if (this.type == "CT") {
					this.tree = [
						{text:"电流互感器", state:{selected: true}}
					]
				} else if (this.type == "PT") {
					this.tree = [
						{text:"电压互感器", state:{selected: true}}
					]
				} else if (this.type == "DS") {
					this.tree = [
						{text:'隔离开关', state:{selected: true}}
					]
				} else if (this.type == "LA") {
					this.tree = [
						{text:'避雷器', state:{selected: true}}
					]
				} else if (this.type == "Capacitor") {
					this.tree = [
						{text:'电容器', state:{selected: true}}
					]
				} else if (this.type == "SC") {
					this.tree = [
						{text:'开关柜', state:{selected: true}}
					]
				} else if (this.type == "ASC") {
					this.tree = [
						{text:'消弧线圈', state:{selected: true}}
					]
				} else if (this.type == "Light") {
					this.tree = [
						{text:'照明', nodes:[
							{text:'灯具', state:{selected: true}}
						]}
					]
				} else if (this.type == "PowerBox") {
					this.tree = [
						{text:'照明', nodes:[
							{text:'动力', state:{selected: true}}
						]}
					]
				} else if (this.type == "Cabinet2") {
					this.path = '电气二次\\'
					this.tree = [
						{text:'屏柜', state:{selected: true}}
					]
				} else if (this.type == "FireExtinguisher") {
					this.path = '水工\\'
					this.tree = [
						{text:'灭火器', state:{selected: true}}
					]
				} else if (this.type == "FireHydrant") {
					this.path = '水工\\'
					this.tree = [
						{text:'消火栓', state:{selected: true}}
					]
				} else if (this.type == "FireWaterTank") {
					this.path = '水工\\'
					this.tree = [
						{text:'消防水箱', state:{selected: true}}
					]
				} else if (this.type == "Sprinkler") {
					this.path = '水工\\'
					this.tree = [
						{text:'喷头', state:{selected: true}}
					]
				} else if (this.type == "Fan") {
					this.path = '暖通\\'
					this.tree = [
						{text:'风机', state:{selected: true}}
					]
				} else if (this.type == "Air") {
					this.path = '暖通\\'
					this.tree = [
						{text:'空调', state:{selected: true}}
					]
				} else if (this.type == 'HerringboneColumn') {
					this.path = '土建\\'
					this.tree = [
						{text:'人字柱', state:{selected: true}}
					]
				} else if (this.type == 'Truss') {
					this.path = '土建\\'
					this.tree = [
						{text:'构架', state:{selected: true}}
					]
				} else {
					this.tree = [
						{text:'其他设备', nodes:[
							{text:'穿墙套管', state:{selected: true}}
						]}
					]
				}

    			$('#tree').treeview({
					data:this.tree,
					enabledLinks:true,
					onNodeSelected: this.nodeSelected
				})

				console.log($('#tree').treeview('getSelected'))
				this.nodeSelected(null, $('#tree').treeview('getSelected')[0])
			},

			methods:{
				getQueryString(name) {
     				var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
     				var r = window.location.search.substr(1).match(reg);
     				if (r != null) {
				 		return  unescape(r[2]);
					}
					return null;
				},

				//选中节点
				nodeSelected(event, node) {
					var path = this.path;
					if (node.parentId != undefined)
					{
						var parent = $('#tree').treeview('getParent', node)
						if (parent.text != '其他设备') {
							path += parent.text + '\\'
						}
					}

					path += node.text;

					if (window.JQ) {
						var sendJson = {
						EventName:'JQFamily',
						Path:path,
						Operation:'getFamilyFileInfos',
						Callback:'vue.loadList'
						}
						JQ.raiseEvent(JSON.stringify(sendJson));
					}
					this.showMaskInfo = '正在获取族类型信息'
					this.isShowMask= true;
				},

				loadList(info) {
					console.log(info)
					this.lists.length = 0
					var that = this;
					var infos = info;
					//var infos = JSON.parse(info);
					infos.forEach(function(e) {
						e.img = e.img.replace('#', '%23')
						that.lists.push(e)
					})
					this.isShowMask= false;
					//this.lists = JSON.parse(info)
				},

				clickList(obj) { //选中的某一项
					console.log(obj)
					this.chooseList = obj;
				},

				onOK() {
					var that = this;
					var info = {
						EventName: "PlaceEquipment",
						OffsetX:this.offsetX,
						OffsetY:this.offsetY,
						FamilyName:this.chooseList.name,
						FamilyFile:this.chooseList.file//"E:\\work\\ACADTools\\trunk\\Revit\\GRevitTools\\bin\\x64\\Debug\\FamilyLib\\电气一次\\变压器\\110kV\\主变设备.rfa"
						//FamilyFile:"主变设备.rfa"
					}
					if (window.JQ) {
						JQ.raiseEvent(JSON.stringify(info));
					}
				}
			}
		})
	</script>
</body>
</html>